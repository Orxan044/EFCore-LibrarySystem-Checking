// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Panel.Data;

#nullable disable

namespace User_Panel.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20240730134549_UserCreat")]
    partial class UserCreat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCore_LibrarySystem.Models.Concretes.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("Author");
                });

            modelBuilder.Entity("EFCore_LibrarySystem.Models.Concretes.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthoursId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReadsCount")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("User_Panel.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFCore_LibrarySystem.Models.Concretes.Author", b =>
                {
                    b.HasOne("EFCore_LibrarySystem.Models.Concretes.Book", "Book")
                        .WithOne("Authors")
                        .HasForeignKey("EFCore_LibrarySystem.Models.Concretes.Author", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("EFCore_LibrarySystem.Models.Concretes.Book", b =>
                {
                    b.HasOne("User_Panel.Models.User", null)
                        .WithMany("BooksBorrowed")
                        .HasForeignKey("UserId");

                    b.HasOne("User_Panel.Models.User", null)
                        .WithMany("BooksReturends")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("EFCore_LibrarySystem.Models.Concretes.Book", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("User_Panel.Models.User", b =>
                {
                    b.Navigation("BooksBorrowed");

                    b.Navigation("BooksReturends");
                });
#pragma warning restore 612, 618
        }
    }
}
